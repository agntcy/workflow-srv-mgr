// Copyright AGNTCY Contributors (https://github.com/agntcy)
// SPDX-License-Identifier: Apache-2.0
/*
Agent Manifest Definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package manifests

import (
	"encoding/json"
)

// checks if the AgentManifest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AgentManifest{}

// AgentManifest Describe all the ACP specs of an agent, including schemas and protocol features.
type AgentManifest struct {
	Metadata   AgentMetadata    `json:"metadata"`
	Specs      AgentACPSpecs    `json:"specs"`
	Deployment *AgentDeployment `json:"deployment,omitempty"`
}

// NewAgentManifest instantiates a new AgentManifest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAgentManifest(metadata AgentMetadata, specs AgentACPSpecs) *AgentManifest {
	this := AgentManifest{}
	this.Metadata = metadata
	this.Specs = specs
	return &this
}

// NewAgentManifestWithDefaults instantiates a new AgentManifest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAgentManifestWithDefaults() *AgentManifest {
	this := AgentManifest{}
	return &this
}

// GetMetadata returns the Metadata field value
func (o *AgentManifest) GetMetadata() AgentMetadata {
	if o == nil {
		var ret AgentMetadata
		return ret
	}

	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
func (o *AgentManifest) GetMetadataOk() (*AgentMetadata, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metadata, true
}

// SetMetadata sets field value
func (o *AgentManifest) SetMetadata(v AgentMetadata) {
	o.Metadata = v
}

// GetSpecs returns the Specs field value
func (o *AgentManifest) GetSpecs() AgentACPSpecs {
	if o == nil {
		var ret AgentACPSpecs
		return ret
	}

	return o.Specs
}

// GetSpecsOk returns a tuple with the Specs field value
// and a boolean to check if the value has been set.
func (o *AgentManifest) GetSpecsOk() (*AgentACPSpecs, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Specs, true
}

// SetSpecs sets field value
func (o *AgentManifest) SetSpecs(v AgentACPSpecs) {
	o.Specs = v
}

// GetDeployment returns the Deployment field value if set, zero value otherwise.
func (o *AgentManifest) GetDeployment() AgentDeployment {
	if o == nil || IsNil(o.Deployment) {
		var ret AgentDeployment
		return ret
	}
	return *o.Deployment
}

// GetDeploymentOk returns a tuple with the Deployment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentManifest) GetDeploymentOk() (*AgentDeployment, bool) {
	if o == nil || IsNil(o.Deployment) {
		return nil, false
	}
	return o.Deployment, true
}

// HasDeployment returns a boolean if a field has been set.
func (o *AgentManifest) HasDeployment() bool {
	if o != nil && !IsNil(o.Deployment) {
		return true
	}

	return false
}

// SetDeployment gets a reference to the given AgentDeployment and assigns it to the Deployment field.
func (o *AgentManifest) SetDeployment(v AgentDeployment) {
	o.Deployment = &v
}

func (o AgentManifest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AgentManifest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["metadata"] = o.Metadata
	toSerialize["specs"] = o.Specs
	if !IsNil(o.Deployment) {
		toSerialize["deployment"] = o.Deployment
	}
	return toSerialize, nil
}

type NullableAgentManifest struct {
	value *AgentManifest
	isSet bool
}

func (v NullableAgentManifest) Get() *AgentManifest {
	return v.value
}

func (v *NullableAgentManifest) Set(val *AgentManifest) {
	v.value = val
	v.isSet = true
}

func (v NullableAgentManifest) IsSet() bool {
	return v.isSet
}

func (v *NullableAgentManifest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAgentManifest(val *AgentManifest) *NullableAgentManifest {
	return &NullableAgentManifest{value: val, isSet: true}
}

func (v NullableAgentManifest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAgentManifest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
