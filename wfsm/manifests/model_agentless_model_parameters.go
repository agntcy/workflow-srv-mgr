// Copyright AGNTCY Contributors (https://github.com/agntcy)
// SPDX-License-Identifier: Apache-2.0
/*
Agent Manifest Definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package manifests

import (
	"encoding/json"
)

// checks if the AgentlessModelParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AgentlessModelParameters{}

// AgentlessModelParameters struct for AgentlessModelParameters
type AgentlessModelParameters struct {
	// The maximum number of tokens to generate before stopping.
	MaxTokens *int32 `json:"max_tokens,omitempty"`
	// Use `temperature` closer to `0.0` for analytical / multiple choice, and closer to a model's maximum `temperature` for creative and generative tasks.
	Temperature *float32 `json:"temperature,omitempty"`
	// An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass.
	TopP *float32 `json:"top_p,omitempty"`
	// Whether to allow parallel tool calls.
	ParallelToolCalls *bool `json:"parallel_tool_calls,omitempty"`
	// The random seed to use for the model, theoretically allowing for deterministic results.
	Seed *int32 `json:"seed,omitempty"`
	// Penalize new tokens based on whether they have appeared in the text so far.
	PresencePenalty *float32 `json:"presence_penalty,omitempty"`
	// Penalize new tokens based on their existing frequency in the text so far.
	FrequencyPenalty *float32 `json:"frequency_penalty,omitempty"`
	// Modify the likelihood of specified tokens appearing in the completion.
	LogitBias map[string]int32 `json:"logit_bias,omitempty"`
	// Override the client-level default timeout for a request, in seconds.
	Timeout       *float32 `json:"timeout,omitempty"`
	StopSequences []string `json:"stop_sequences,omitempty"`
}

// NewAgentlessModelParameters instantiates a new AgentlessModelParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAgentlessModelParameters() *AgentlessModelParameters {
	this := AgentlessModelParameters{}
	return &this
}

// NewAgentlessModelParametersWithDefaults instantiates a new AgentlessModelParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAgentlessModelParametersWithDefaults() *AgentlessModelParameters {
	this := AgentlessModelParameters{}
	return &this
}

// GetMaxTokens returns the MaxTokens field value if set, zero value otherwise.
func (o *AgentlessModelParameters) GetMaxTokens() int32 {
	if o == nil || IsNil(o.MaxTokens) {
		var ret int32
		return ret
	}
	return *o.MaxTokens
}

// GetMaxTokensOk returns a tuple with the MaxTokens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentlessModelParameters) GetMaxTokensOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxTokens) {
		return nil, false
	}
	return o.MaxTokens, true
}

// HasMaxTokens returns a boolean if a field has been set.
func (o *AgentlessModelParameters) HasMaxTokens() bool {
	if o != nil && !IsNil(o.MaxTokens) {
		return true
	}

	return false
}

// SetMaxTokens gets a reference to the given int32 and assigns it to the MaxTokens field.
func (o *AgentlessModelParameters) SetMaxTokens(v int32) {
	o.MaxTokens = &v
}

// GetTemperature returns the Temperature field value if set, zero value otherwise.
func (o *AgentlessModelParameters) GetTemperature() float32 {
	if o == nil || IsNil(o.Temperature) {
		var ret float32
		return ret
	}
	return *o.Temperature
}

// GetTemperatureOk returns a tuple with the Temperature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentlessModelParameters) GetTemperatureOk() (*float32, bool) {
	if o == nil || IsNil(o.Temperature) {
		return nil, false
	}
	return o.Temperature, true
}

// HasTemperature returns a boolean if a field has been set.
func (o *AgentlessModelParameters) HasTemperature() bool {
	if o != nil && !IsNil(o.Temperature) {
		return true
	}

	return false
}

// SetTemperature gets a reference to the given float32 and assigns it to the Temperature field.
func (o *AgentlessModelParameters) SetTemperature(v float32) {
	o.Temperature = &v
}

// GetTopP returns the TopP field value if set, zero value otherwise.
func (o *AgentlessModelParameters) GetTopP() float32 {
	if o == nil || IsNil(o.TopP) {
		var ret float32
		return ret
	}
	return *o.TopP
}

// GetTopPOk returns a tuple with the TopP field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentlessModelParameters) GetTopPOk() (*float32, bool) {
	if o == nil || IsNil(o.TopP) {
		return nil, false
	}
	return o.TopP, true
}

// HasTopP returns a boolean if a field has been set.
func (o *AgentlessModelParameters) HasTopP() bool {
	if o != nil && !IsNil(o.TopP) {
		return true
	}

	return false
}

// SetTopP gets a reference to the given float32 and assigns it to the TopP field.
func (o *AgentlessModelParameters) SetTopP(v float32) {
	o.TopP = &v
}

// GetParallelToolCalls returns the ParallelToolCalls field value if set, zero value otherwise.
func (o *AgentlessModelParameters) GetParallelToolCalls() bool {
	if o == nil || IsNil(o.ParallelToolCalls) {
		var ret bool
		return ret
	}
	return *o.ParallelToolCalls
}

// GetParallelToolCallsOk returns a tuple with the ParallelToolCalls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentlessModelParameters) GetParallelToolCallsOk() (*bool, bool) {
	if o == nil || IsNil(o.ParallelToolCalls) {
		return nil, false
	}
	return o.ParallelToolCalls, true
}

// HasParallelToolCalls returns a boolean if a field has been set.
func (o *AgentlessModelParameters) HasParallelToolCalls() bool {
	if o != nil && !IsNil(o.ParallelToolCalls) {
		return true
	}

	return false
}

// SetParallelToolCalls gets a reference to the given bool and assigns it to the ParallelToolCalls field.
func (o *AgentlessModelParameters) SetParallelToolCalls(v bool) {
	o.ParallelToolCalls = &v
}

// GetSeed returns the Seed field value if set, zero value otherwise.
func (o *AgentlessModelParameters) GetSeed() int32 {
	if o == nil || IsNil(o.Seed) {
		var ret int32
		return ret
	}
	return *o.Seed
}

// GetSeedOk returns a tuple with the Seed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentlessModelParameters) GetSeedOk() (*int32, bool) {
	if o == nil || IsNil(o.Seed) {
		return nil, false
	}
	return o.Seed, true
}

// HasSeed returns a boolean if a field has been set.
func (o *AgentlessModelParameters) HasSeed() bool {
	if o != nil && !IsNil(o.Seed) {
		return true
	}

	return false
}

// SetSeed gets a reference to the given int32 and assigns it to the Seed field.
func (o *AgentlessModelParameters) SetSeed(v int32) {
	o.Seed = &v
}

// GetPresencePenalty returns the PresencePenalty field value if set, zero value otherwise.
func (o *AgentlessModelParameters) GetPresencePenalty() float32 {
	if o == nil || IsNil(o.PresencePenalty) {
		var ret float32
		return ret
	}
	return *o.PresencePenalty
}

// GetPresencePenaltyOk returns a tuple with the PresencePenalty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentlessModelParameters) GetPresencePenaltyOk() (*float32, bool) {
	if o == nil || IsNil(o.PresencePenalty) {
		return nil, false
	}
	return o.PresencePenalty, true
}

// HasPresencePenalty returns a boolean if a field has been set.
func (o *AgentlessModelParameters) HasPresencePenalty() bool {
	if o != nil && !IsNil(o.PresencePenalty) {
		return true
	}

	return false
}

// SetPresencePenalty gets a reference to the given float32 and assigns it to the PresencePenalty field.
func (o *AgentlessModelParameters) SetPresencePenalty(v float32) {
	o.PresencePenalty = &v
}

// GetFrequencyPenalty returns the FrequencyPenalty field value if set, zero value otherwise.
func (o *AgentlessModelParameters) GetFrequencyPenalty() float32 {
	if o == nil || IsNil(o.FrequencyPenalty) {
		var ret float32
		return ret
	}
	return *o.FrequencyPenalty
}

// GetFrequencyPenaltyOk returns a tuple with the FrequencyPenalty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentlessModelParameters) GetFrequencyPenaltyOk() (*float32, bool) {
	if o == nil || IsNil(o.FrequencyPenalty) {
		return nil, false
	}
	return o.FrequencyPenalty, true
}

// HasFrequencyPenalty returns a boolean if a field has been set.
func (o *AgentlessModelParameters) HasFrequencyPenalty() bool {
	if o != nil && !IsNil(o.FrequencyPenalty) {
		return true
	}

	return false
}

// SetFrequencyPenalty gets a reference to the given float32 and assigns it to the FrequencyPenalty field.
func (o *AgentlessModelParameters) SetFrequencyPenalty(v float32) {
	o.FrequencyPenalty = &v
}

// GetLogitBias returns the LogitBias field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AgentlessModelParameters) GetLogitBias() map[string]int32 {
	if o == nil {
		var ret map[string]int32
		return ret
	}
	return o.LogitBias
}

// GetLogitBiasOk returns a tuple with the LogitBias field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AgentlessModelParameters) GetLogitBiasOk() (*map[string]int32, bool) {
	if o == nil || IsNil(o.LogitBias) {
		return nil, false
	}
	return &o.LogitBias, true
}

// HasLogitBias returns a boolean if a field has been set.
func (o *AgentlessModelParameters) HasLogitBias() bool {
	if o != nil && IsNil(o.LogitBias) {
		return true
	}

	return false
}

// SetLogitBias gets a reference to the given map[string]int32 and assigns it to the LogitBias field.
func (o *AgentlessModelParameters) SetLogitBias(v map[string]int32) {
	o.LogitBias = v
}

// GetTimeout returns the Timeout field value if set, zero value otherwise.
func (o *AgentlessModelParameters) GetTimeout() float32 {
	if o == nil || IsNil(o.Timeout) {
		var ret float32
		return ret
	}
	return *o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentlessModelParameters) GetTimeoutOk() (*float32, bool) {
	if o == nil || IsNil(o.Timeout) {
		return nil, false
	}
	return o.Timeout, true
}

// HasTimeout returns a boolean if a field has been set.
func (o *AgentlessModelParameters) HasTimeout() bool {
	if o != nil && !IsNil(o.Timeout) {
		return true
	}

	return false
}

// SetTimeout gets a reference to the given float32 and assigns it to the Timeout field.
func (o *AgentlessModelParameters) SetTimeout(v float32) {
	o.Timeout = &v
}

// GetStopSequences returns the StopSequences field value if set, zero value otherwise.
func (o *AgentlessModelParameters) GetStopSequences() []string {
	if o == nil || IsNil(o.StopSequences) {
		var ret []string
		return ret
	}
	return o.StopSequences
}

// GetStopSequencesOk returns a tuple with the StopSequences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentlessModelParameters) GetStopSequencesOk() ([]string, bool) {
	if o == nil || IsNil(o.StopSequences) {
		return nil, false
	}
	return o.StopSequences, true
}

// HasStopSequences returns a boolean if a field has been set.
func (o *AgentlessModelParameters) HasStopSequences() bool {
	if o != nil && !IsNil(o.StopSequences) {
		return true
	}

	return false
}

// SetStopSequences gets a reference to the given []string and assigns it to the StopSequences field.
func (o *AgentlessModelParameters) SetStopSequences(v []string) {
	o.StopSequences = v
}

func (o AgentlessModelParameters) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AgentlessModelParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MaxTokens) {
		toSerialize["max_tokens"] = o.MaxTokens
	}
	if !IsNil(o.Temperature) {
		toSerialize["temperature"] = o.Temperature
	}
	if !IsNil(o.TopP) {
		toSerialize["top_p"] = o.TopP
	}
	if !IsNil(o.ParallelToolCalls) {
		toSerialize["parallel_tool_calls"] = o.ParallelToolCalls
	}
	if !IsNil(o.Seed) {
		toSerialize["seed"] = o.Seed
	}
	if !IsNil(o.PresencePenalty) {
		toSerialize["presence_penalty"] = o.PresencePenalty
	}
	if !IsNil(o.FrequencyPenalty) {
		toSerialize["frequency_penalty"] = o.FrequencyPenalty
	}
	if o.LogitBias != nil {
		toSerialize["logit_bias"] = o.LogitBias
	}
	if !IsNil(o.Timeout) {
		toSerialize["timeout"] = o.Timeout
	}
	if !IsNil(o.StopSequences) {
		toSerialize["stop_sequences"] = o.StopSequences
	}
	return toSerialize, nil
}

type NullableAgentlessModelParameters struct {
	value *AgentlessModelParameters
	isSet bool
}

func (v NullableAgentlessModelParameters) Get() *AgentlessModelParameters {
	return v.value
}

func (v *NullableAgentlessModelParameters) Set(val *AgentlessModelParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableAgentlessModelParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableAgentlessModelParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAgentlessModelParameters(val *AgentlessModelParameters) *NullableAgentlessModelParameters {
	return &NullableAgentlessModelParameters{value: val, isSet: true}
}

func (v NullableAgentlessModelParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAgentlessModelParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
