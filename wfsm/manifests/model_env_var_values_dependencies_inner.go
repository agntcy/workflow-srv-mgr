/*
Agent Manifest Definition

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package manifests

import (
	"encoding/json"
)

// checks if the EnvVarValuesDependenciesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnvVarValuesDependenciesInner{}

// EnvVarValuesDependenciesInner struct for EnvVarValuesDependenciesInner
type EnvVarValuesDependenciesInner struct {
	// name of the agent dependency these environment variables are for
	Name   *string       `json:"name,omitempty"`
	Values *EnvVarValues `json:"values,omitempty"`
}

// NewEnvVarValuesDependenciesInner instantiates a new EnvVarValuesDependenciesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvVarValuesDependenciesInner() *EnvVarValuesDependenciesInner {
	this := EnvVarValuesDependenciesInner{}
	return &this
}

// NewEnvVarValuesDependenciesInnerWithDefaults instantiates a new EnvVarValuesDependenciesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvVarValuesDependenciesInnerWithDefaults() *EnvVarValuesDependenciesInner {
	this := EnvVarValuesDependenciesInner{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *EnvVarValuesDependenciesInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvVarValuesDependenciesInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *EnvVarValuesDependenciesInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *EnvVarValuesDependenciesInner) SetName(v string) {
	o.Name = &v
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *EnvVarValuesDependenciesInner) GetValues() EnvVarValues {
	if o == nil || IsNil(o.Values) {
		var ret EnvVarValues
		return ret
	}
	return *o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvVarValuesDependenciesInner) GetValuesOk() (*EnvVarValues, bool) {
	if o == nil || IsNil(o.Values) {
		return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *EnvVarValuesDependenciesInner) HasValues() bool {
	if o != nil && !IsNil(o.Values) {
		return true
	}

	return false
}

// SetValues gets a reference to the given EnvVarValues and assigns it to the Values field.
func (o *EnvVarValuesDependenciesInner) SetValues(v EnvVarValues) {
	o.Values = &v
}

func (o EnvVarValuesDependenciesInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnvVarValuesDependenciesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Values) {
		toSerialize["values"] = o.Values
	}
	return toSerialize, nil
}

type NullableEnvVarValuesDependenciesInner struct {
	value *EnvVarValuesDependenciesInner
	isSet bool
}

func (v NullableEnvVarValuesDependenciesInner) Get() *EnvVarValuesDependenciesInner {
	return v.value
}

func (v *NullableEnvVarValuesDependenciesInner) Set(val *EnvVarValuesDependenciesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvVarValuesDependenciesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvVarValuesDependenciesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvVarValuesDependenciesInner(val *EnvVarValuesDependenciesInner) *NullableEnvVarValuesDependenciesInner {
	return &NullableEnvVarValuesDependenciesInner{value: val, isSet: true}
}

func (v NullableEnvVarValuesDependenciesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvVarValuesDependenciesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
